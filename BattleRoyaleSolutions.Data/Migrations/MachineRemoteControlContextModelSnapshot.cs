// <auto-generated />
using System;
using BattleRoyaleSolutions.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BattleRoyaleSolutions.Data.Migrations
{
    [DbContext(typeof(MachineRemoteControlContext))]
    partial class MachineRemoteControlContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BattleRoyaleSolutions.Core.Entities.CommandLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Command");

                    b.Property<Guid>("MachineId");

                    b.Property<string>("Return");

                    b.HasKey("Id");

                    b.HasIndex("MachineId");

                    b.ToTable("CommandLog");
                });

            modelBuilder.Entity("BattleRoyaleSolutions.Core.LocalMachineInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AntiVirusName")
                        .HasMaxLength(40);

                    b.Property<string>("DotNetVersion")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("InternetProtocol")
                        .HasMaxLength(10);

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsFirewallActive");

                    b.Property<string>("MachineName")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<double>("TotalAvalible");

                    b.Property<double>("TotalSize");

                    b.Property<double>("TotalUsed");

                    b.Property<string>("WindowsVersion")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("LocalMachines");
                });

            modelBuilder.Entity("BattleRoyaleSolutions.Core.Entities.CommandLog", b =>
                {
                    b.HasOne("BattleRoyaleSolutions.Core.LocalMachineInfo", "LocalMachineInfo")
                        .WithMany("CommandLogs")
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
